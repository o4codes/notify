version: '3'
services:
  api:
    container_name: notify_api
    build: 
      context: .
      dockerfile: .docker/Dockerfile
    depends_on:
      - notify_postgres
      - pgadmin
    environment:
      NODE_ENV: development
      PORT: ${API_PORT}
    ports:
      - '${API_PORT}:${API_PORT}'
    volumes:
      - .:/app/
      - /app/node_modules
    tty: true

  notify_postgres:
    container_name: notify_db
    restart: unless-stopped
    image: postgres
    ports:
      - '${DB_PORT}:5432'
    environment:
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_NAME}'
    volumes:
      - notify_postgres_volume:/var/lib/postgresql/data
  
  notify_redis:
    image: 'bitnami/redis:latest'
    volumes:
    - notify_redis_volume:/data
    ports:
      - "${REDIS_PORT}:6379"
    restart: on-failure
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
  
  pgadmin:
    container_name: pg-admin
    image: dpage/pgadmin4
    depends_on:
      - notify_postgres
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL}'
      PGADMIN_DEFAULT_PASSWORD: '${DB_PASSWORD}'
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '${PGADMIN_PORT}:80'
  
  localstack:
    image: localstack/localstack:3.0.2
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - SERVICES=ses
      - EDGE_PORT=4566
      - AWS_DEFAULT_REGION=us-east-2
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "./.docker/localstack/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh"  # ready hook
      - "localstack_volume:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  
volumes:
  notify_postgres_volume:
  notify_redis_volume:
  localstack_volume:

